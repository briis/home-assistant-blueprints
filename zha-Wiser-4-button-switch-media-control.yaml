blueprint:
  name: ZHA LK Fuga Wiser 4-Button Switch for Volume and Media Control
  description: >
    #### Automate Schneider Wiser 4-Button Battery Switch by ZHA events.

    This Blueprint is specific for controlling a Media Player. 

    You must create an Input Selct Helper that contains a list of Radio Channels or other sources that the media player can access.

    The Buttons are paired as follows:

    * Upper Left button Short Press: Start Playing

    * Upper Right button Short Press: Pause Playing

    * Lower Left button Short Press: Go to next item in the Playlist

    * Lower Right button Short Press: Go to Previous item in the Playlist

    * Lower Left button Long Press: Turn up the Volume

    * Lower Right button Long Press: Turn down the Volume

  domain: automation
  input:
    schneider_wiser_sw:
      name: LK Fuga Wiser Battery Operated 4-button Device
      description: Schneider LK Fuga Wiser 4-Button 555 D 6001 or 555 D 0001
      selector:
        device:
          filter:
            integration: zha
            manufacturer: Schneider Electric
            model: FLS/AIRLINK/4
          multiple: false
    media_device:
      name: Media Player to Use
      description: Media Player to be controlled by buttons
      selector:
        target:
          entity:
            domain: media_player
    playlist:
      name: Playlist to Use
      description: Select the Input Select Device which contains the Playlist
      selector:
        target:
          entity:
            domain: input_select
    volume_delay:
      name: Volume stepping delay
      description: The minimal delay in milliseconds between sending new volume adjustments.
      default: 500
      selector:
        number:
          min: 100
          max: 1000
          step: 100
          unit_of_measurement: "msec"
          mode: slider
    volume_steps:
      name: Volume number of steps
      description: The number of steps for volume adjustments.
      default: 20
      selector:
        number:
          min: 5
          max: 50
          step: 5
          unit_of_measurement: "Num"
          mode: slider

  source_url: https://github.com/briis/home-assistant-blueprints/blob/main/zha-Wiser-4-button-switch-media-control.yaml
mode: restart
max_exceeded: silent
trigger:
  # button_UL_short_press
  - platform: event
    event_type: zha_event
    id: ul_short
    event_data:
      device_id: !input schneider_wiser_sw
      command: "on"
      endpoint_id: 21
  # button_LL_short_press
  - platform: event
    event_type: zha_event
    id: ll_short
    event_data:
      device_id: !input schneider_wiser_sw
      command: "on"
      endpoint_id: 22
  # button_UR_short_press
  - platform: event
    event_type: zha_event
    id: ur_short
    event_data:
      device_id: !input schneider_wiser_sw
      command: "off"
      endpoint_id: 21
  # button_LR_short_press
  - platform: event
    event_type: zha_event
    id: lr_short
    event_data:
      device_id: !input schneider_wiser_sw
      command: "off"
      endpoint_id: 22
  # button_UL_long_press
  - platform: event
    event_type: zha_event
    id: ul_long
    event_data:
      device_id: !input schneider_wiser_sw
      command: "move_with_on_off"
      endpoint_id: 21
  # button_UR_long_press
  - platform: event
    event_type: zha_event
    id: ur_long
    event_data:
      device_id: !input schneider_wiser_sw
      command: "move"
      endpoint_id: 21
  # button_LL_long_press
  - platform: event
    event_type: zha_event
    id: ll_long
    event_data:
      device_id: !input schneider_wiser_sw
      command: "move_with_on_off"
      endpoint_id: 22
  # button_LR_long_press
  - platform: event
    event_type: zha_event
    id: lr_long
    event_data:
      device_id: !input schneider_wiser_sw
      command: "move"
      endpoint_id: 22
  # button_L_stop
  - platform: event
    event_type: zha_event
    id: l_stop
    event_data:
      device_id: !input schneider_wiser_sw
      command: "stop"
      endpoint_id: 22
  # button_U_stop
  - platform: event
    event_type: zha_event
    id: u_stop
    event_data:
      device_id: !input schneider_wiser_sw
      command: "stop"
      endpoint_id: 21
action:
  - variables:
      player: !input media_device
      play_list: !input playlist
      steps: !input volume_steps
      stepsize: "{{ 1.0 / steps }}"
  - choose:
      - conditions:
          - condition: trigger
            id: ul_short
        sequence:
          - service: media_player.media_play
            data: {}
            target: !input media_device
      - conditions:
          - condition: trigger
            id: ur_short
        sequence:
          - service: media_player.media_pause
            data: {}
            target: !input media_device
      - conditions:
          - condition: trigger
            id: ll_short
        sequence:
          - service: input_select.select_next
            data:
              cycle: true
            target: !input playlist
          - service: media_player.select_source
            data:
              source: "{{ states(play_list.entity_id) }}"
            target: !input media_device
      - conditions:
          - condition: trigger
            id: lr_short
        sequence:
          - service: input_select.select_previous
            data:
              cycle: true
            target: !input playlist
          - service: media_player.select_source
            data:
              source: "{{ states(play_list.entity_id) }}"
            target: !input media_device
      - conditions:
          - condition: trigger
            id: ll_long
        sequence:
          - repeat:
              while:
                - condition: trigger
                  id: ll_long
              sequence:
                - service: media_player.volume_set
                  data:
                    volume_level: >-
                      {% set volume = state_attr(player.entity_id, 'volume_level') + stepsize %}
                      {{ 1.0 if volume > 1.0 else volume }}
                  target: !input media_device
                - delay:
                    milliseconds: !input "volume_delay"
      - conditions:
          - condition: trigger
            id: lr_long
        sequence:
          - repeat:
              while:
                - condition: trigger
                  id: lr_long
              sequence:
                - service: media_player.volume_set
                  data:
                    volume_level: >-
                      {% set volume = state_attr(player.entity_id, 'volume_level') - stepsize %}
                      {{ 0.0 if volume < 0.0 else volume }}
                  target: !input media_device
                - delay:
                    milliseconds: !input "volume_delay"
